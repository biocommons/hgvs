[project]
name = "hgvs"
authors = [
  { name="HGVS Contributors", email="biocommons-dev@googlegroups.com" },
]
description = "HGVS Parser, Formatter, Mapper, Validator"
readme = "README.rst"
license = { file="LICENSE.txt" }
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps."
]
keywords = [
    "biocommons",
    "bioinformatics",
    "computational biology",
    "genome variation",
    "genomics",
    "hgvs",
    "variation"
    ]
dynamic = ["version", "optional-dependencies"]

dependencies=[
    "attrs >= 17.4.0",  # https://github.com/biocommons/hgvs/issues/473
    "biocommons.seqrepo >= 0.6.5",
    "bioutils >= 0.4.0,<1.0",
    "configparser >= 3.3.0",
    "importlib_resources",
    "ipython",
    "parsley",
    "psycopg2",
    "six",
]

[project.urls]
"Homepage" = "https://github.com/biocommons/hgvs"
"Bug Tracker" = "https://github.com/biocommons/hgvs/issues"

[project.scripts]
"hgvs-shell" = "hgvs.shell:shell"

[build-system]
requires = [
	 "setuptools >= 69.0.2",
   	 "setuptools_scm[toml] >= 8.0"
	 ]
build-backend = "setuptools.build_meta"


[tool.setuptools_scm]


# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
[tool.pytest.ini_options]
addopts = "-s -v -x --strict-markers -m 'not extra' --doctest-modules --cov=src"
doctest_optionflags = [
    "ALLOW_BYTES",
    "ALLOW_UNICODE",
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
    "NORMALIZE_WHITESPACE",
]
markers = [
	"network: tests that require network connectivity",
	"slow: slow tests that should be run infrequently",
]


[tool.coverage.run]
branch = true
source = ["hgvs"]
omit = ["*_test.py", "*/test/*"]


[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 100


# [tool.flake8]
# flake8 does not support configuration in pyproject.toml
# https://github.com/PyCQA/flake8/issues/234#issuecomment-812800832
# The config in setup.cfg

[tool.isort]
profile = "black"

[tool.pylint.'MESSAGES CONTROL']
disable = "R0913"


[tool.pylint.format]
max-line-length = "120"
