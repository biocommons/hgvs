name: Python package

on:
  push:
  pull_request:

jobs:
  # codechecks:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #         cache: "pip"
  #         cache-dependency-path: "**/setup.cfg"

  #     - name: Install dependencies
  #       run: |
  #         pip install -e .[dev]

  #     - name: Lint with flake8
  #       run: |
  #         # stop the build if there are Python syntax errors or undefined names
  #         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  #     - name: Format check with isort
  #       run: |
  #         isort --check src

  #     - name: Format check with black
  #       run: |
  #         black --check src

  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "**/setup.cfg"

      - name: Install dependencies
        run: |
          pip install -e .[dev]

      - name: Test with pytest
        run: |
          make test

  deploy:
    needs:
      # - codechecks # skip for now
      - test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: "**/setup.cfg"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest pytest-cov twine
      - name: Build package
        run: python -m build

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
