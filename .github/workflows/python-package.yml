name: Python package

on:
  push:
  pull_request:

jobs:
  cqa:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip
        cache-dependency-path: '**/pyproject.yaml'

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --use-deprecated=legacy-resolver -e .[dev]

    - name: Format check with Ruff
      run: |
        ruff format --check .

  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "**/setup.cfg"

      - name: Install dependencies
        run: |
          pip install -e .[dev]

      - name: Test with pytest
        run: |
          make test

  deploy:
    needs:
      # - codechecks # skip for now
      - test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: "**/setup.cfg"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest pytest-cov twine
      - name: Build package
        run: python -m build

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
