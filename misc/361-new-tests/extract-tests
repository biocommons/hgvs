#!/usr/bin/env python3

"""Extract tests from clinvar variants in hgvs4variation.txt.gz"""

import csv
import gzip
import io
import itertools
import re
import sys

def open_hgvs4variation(fn):
    fh = gzip.open(fn, "rb")
    while not fh.peek(7).startswith(b"#Symbol"):
        fh.readline()
    fh.read(1)            # fh now positioned header, col 2 (after  #)
    return csv.DictReader(io.TextIOWrapper(fh), delimiter="\t")

def read_variation_groups(fn):
    """open fn, yield sets of variants with same VariationID"""
    rdr = open_hgvs4variation(fn)
    blocks = []
    for rec in rdr:
        if blocks and blocks[0]["VariationID"] != rec["VariationID"]:
            yield blocks
            blocks = []
        blocks.append(rec)
    if blocks:
        yield blocks

def collect_sequence_variants(vg):
    trunc_del_re = re.compile("del$")

    nexprs = [r["NucleotideExpression"] for r in vg] + [r["ProteinExpression"] for r in vg]
    nexprs = filter(lambda x: x != "-", nexprs)
    nexprs = filter(lambda x: not trunc_del_re.search(x), nexprs)
    nexprs = list(nexprs)

    binned_nexprs = {p: [ne for ne in nexprs if ne.startswith(p)] for p in ('NC', 'NG', 'NM', 'NP', 'NR')}
    return binned_nexprs


if __name__ == "__main__":
    fieldnames = "gene variation_id hgvs_variants".split()
    writer = csv.DictWriter(sys.stdout, fieldnames=fieldnames, delimiter="\t")
    writer.writeheader()

    for vg in read_variation_groups(sys.argv[1]):

        if vg[0]["Symbol"] == "-":
            continue

        binned_nexprs = collect_sequence_variants(vg)

        n_tx_vars = len(binned_nexprs["NM"]) + len(binned_nexprs["NR"])

        if n_tx_vars == 0:
            continue

        hgvs_variants = " ".join(itertools.chain.from_iterable(
            sorted(binned_nexprs[k]) for k in ('NC', 'NG', 'NM', 'NP', 'NR')))

        writer.writerow({
            "gene": vg[0]["Symbol"],
            "variation_id": vg[0]["VariationID"],
            "hgvs_variants": hgvs_variants})
